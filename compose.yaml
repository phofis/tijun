version: '3.8'

services:
  db:
    image: postgres:14-alpine
    container_name: db
    environment:
      POSTGRES_DB: tijun_db
      POSTGRES_USER: tijun_user
      POSTGRES_PASSWORD: tijun
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  spring:
    image: openjdk:17-jdk-alpine
    container_name: spring
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/tijun_db
      SPRING_DATASOURCE_USERNAME: tijun_user
      SPRING_DATASOURCE_PASSWORD: tijun
    volumes:
      - ./spring-backend/tijun/target/tijun-0.0.1-SNAPSHOT.jar:/app/app.jar
    command: ["java", "-jar", "/app/app.jar"]
    ports:
      - "8000:8000"
    networks:
      - backend
      - frontend

  vue-build:
    image: node:18-alpine
    container_name: vue-build
    working_dir: /app
    volumes:
      - ./vue-frontend/tijun:/app
    command: sh -c "npm install && npm run build"
    ports:
      - "80:3000"
    networks:
      - frontend

  vue:
    image: nginx:alpine
    container_name: vue
    depends_on:
      - vue-build
    volumes:
      - ./vue-frontend/tijun/dist:/usr/share/nginx/html
    ports:
      - "8081:80"
    networks:
      - frontend

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

volumes:
  postgres_data:
